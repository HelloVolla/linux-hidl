From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Marius Gripsgard <marius@ubports.com>
Date: Fri, 2 Nov 2018 19:24:25 +0100
Subject: [PATCH] Add building and generating for HIDL headers, src and
 libraries

---
 base/Status.cpp                      | 2 +-
 base/include/hidl/TaskRunner.h       | 1 +
 transport/HidlBinderSupport.cpp      | 2 +-
 transport/HidlPassthroughSupport.cpp | 2 +-
 transport/HidlTransportSupport.cpp   | 2 ++
 transport/ServiceManagement.cpp      | 6 +++---
 transport/Static.cpp                 | 2 +-
 transport/include/hidl/Static.h      | 1 +
 8 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/src/libhidl/base/Status.cpp b/src/libhidl/base/Status.cpp
index 90474a01fb58dd0d0aad81275863f121750dac42..4bb2646659eb6394cd8ac0cce18532049db5327f 100644
--- a/src/libhidl/base/Status.cpp
+++ b/src/libhidl/base/Status.cpp
@@ -169,7 +169,7 @@ namespace details {
 
         if (gReturnRestriction == HidlReturnRestriction::ERROR_IF_UNCHECKED) {
             LOG(ERROR) << "Failed to check status of HIDL Return.";
-            CallStack::logStack("unchecked HIDL return", CallStack::getCurrent(10).get(), ANDROID_LOG_ERROR);
+            /*CallStack::logStack("unchecked HIDL return", CallStack::getCurrent(10).get(), ANDROID_LOG_ERROR);*/
         } else {
             LOG(FATAL) << "Failed to check status of HIDL Return.";
         }
diff --git a/src/libhidl/base/include/hidl/TaskRunner.h b/src/libhidl/base/include/hidl/TaskRunner.h
index 6a79ebf544f35d19f47e2d04e04277992bb3b733..f3ea92f7bbc9cdf233a3911cab70ce3230cc549f 100644
--- a/src/libhidl/base/include/hidl/TaskRunner.h
+++ b/src/libhidl/base/include/hidl/TaskRunner.h
@@ -16,6 +16,7 @@
 #ifndef ANDROID_HIDL_TASK_RUNNER_H
 #define ANDROID_HIDL_TASK_RUNNER_H
 
+#include <functional>
 #include <memory>
 #include <thread>
 
diff --git a/src/libhidl/transport/HidlBinderSupport.cpp b/src/libhidl/transport/HidlBinderSupport.cpp
index 352ed78ad8212d7a47d9f551861916b7ee43623b..76ff6958751d58f10ed9aa96e6bc522cb5021cd0 100644
--- a/src/libhidl/transport/HidlBinderSupport.cpp
+++ b/src/libhidl/transport/HidlBinderSupport.cpp
@@ -18,7 +18,7 @@
 
 #include <hidl/HidlBinderSupport.h>
 
-#include <InternalStatic.h>  // TODO(b/69122224): remove this include, for getOrCreateCachedBinder
+#include "InternalStatic.h"  // TODO(b/69122224): remove this include, for getOrCreateCachedBinder
 #include <android/hidl/base/1.0/BpHwBase.h>
 #include <hwbinder/IPCThreadState.h>
 
diff --git a/src/libhidl/transport/HidlPassthroughSupport.cpp b/src/libhidl/transport/HidlPassthroughSupport.cpp
index bc6765622c04bdea1ddc64e6c3e5760e807af97e..6f30b7b0efb1db56d246a1c0c74a760b9bd9dcb1 100644
--- a/src/libhidl/transport/HidlPassthroughSupport.cpp
+++ b/src/libhidl/transport/HidlPassthroughSupport.cpp
@@ -16,7 +16,7 @@
 
 #include <hidl/HidlPassthroughSupport.h>
 
-#include <InternalStatic.h>  // TODO(b/69122224): remove this include, for tryWrap
+#include "InternalStatic.h"  // TODO(b/69122224): remove this include, for tryWrap
 
 #include <hidl/HidlTransportUtils.h>
 #include <hidl/Static.h>
diff --git a/src/libhidl/transport/HidlTransportSupport.cpp b/src/libhidl/transport/HidlTransportSupport.cpp
index b433b70a6d81a4a4cd23ec7d2151147db9839f36..70c7a555417ad1bb5980b06fe02e3a1010de2cc5 100644
--- a/src/libhidl/transport/HidlTransportSupport.cpp
+++ b/src/libhidl/transport/HidlTransportSupport.cpp
@@ -20,6 +20,8 @@
 #include <android-base/logging.h>
 #include <android/hidl/manager/1.0/IServiceManager.h>
 
+#include <linux/sched.h>
+
 namespace android {
 namespace hardware {
 
diff --git a/src/libhidl/transport/ServiceManagement.cpp b/src/libhidl/transport/ServiceManagement.cpp
index bbec17c1847f8c4aa75b395951326ef84c68e120..5415dbb1b8469e15c7c01109c7d3f10409e8e7d4 100644
--- a/src/libhidl/transport/ServiceManagement.cpp
+++ b/src/libhidl/transport/ServiceManagement.cpp
@@ -16,7 +16,7 @@
 
 #define LOG_TAG "ServiceManagement"
 
-#include <android/dlext.h>
+//#include <android/dlext.h>
 #include <condition_variable>
 #include <dlfcn.h>
 #include <dirent.h>
@@ -44,7 +44,7 @@
 #include <hwbinder/IPCThreadState.h>
 #include <hwbinder/Parcel.h>
 #if !defined(__ANDROID_RECOVERY__)
-#include <vndksupport/linker.h>
+//#include <vndksupport/linker.h>
 #endif
 
 #include <android/hidl/manager/1.2/BnHwServiceManager.h>
@@ -362,7 +362,7 @@ struct PassthroughServiceManager : IServiceManager1_1 {
                     handle = dlopen(fullPath.c_str(), dlMode);
                 } else {
 #if !defined(__ANDROID_RECOVERY__)
-                    handle = android_load_sphal_library(fullPath.c_str(), dlMode);
+                    /*handle = android_load_sphal_library(fullPath.c_str(), dlMode);*/
 #endif
                 }
 
diff --git a/src/libhidl/transport/Static.cpp b/src/libhidl/transport/Static.cpp
index af16e8f18ab913e63598a37cf16d5073d2f7d292..fd0f562121b1d0e943fe5b2af3b665c945c801d9 100644
--- a/src/libhidl/transport/Static.cpp
+++ b/src/libhidl/transport/Static.cpp
@@ -17,7 +17,7 @@
 // All static variables go here, to control initialization and
 // destruction order in the library.
 
-#include <InternalStatic.h>
+#include "InternalStatic.h"
 #include <hidl/Static.h>
 
 #include <android/hidl/manager/1.0/IServiceManager.h>
diff --git a/src/libhidl/transport/include/hidl/Static.h b/src/libhidl/transport/include/hidl/Static.h
index be74baefc1907f87398c3818dac156c86fb5d668..d833dcad9e4f788e306026903bdf97daec8069e2 100644
--- a/src/libhidl/transport/include/hidl/Static.h
+++ b/src/libhidl/transport/include/hidl/Static.h
@@ -27,6 +27,7 @@
 #include <hwbinder/IBinder.h>
 #include <hwbinder/IInterface.h>
 #include <utils/StrongPointer.h>
+#include <linux/sched.h>
 
 namespace android {
 namespace hardware {
